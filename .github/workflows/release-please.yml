---
name: Run release-please

on:
  push:
    branches:
      - release-v*

permissions:
  actions: read
  contents: write
  pull-requests: write

# run concurrency group for the workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.releases_created }}
      pr_created: ${{ steps.release.outputs.prs_created }}
      release_head_branch: ${{ steps.release.outputs.pr }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Get github app token
        uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09  # v1.11.7
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ steps.gh-app-token.outputs.token }}

      - name: Check release branch
        id: check_branch
        run: |
          RELEASE_BRANCH=${{ github.ref_name }}
          CURRENT_VERSION=$(echo "$RELEASE_BRANCH" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_OUTPUT

          # Sort release branches
          HIGHER_BRANCHES=$(git branch -r | grep release-v | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | sort -V | tail -n +2)
          if [[ -n "$HIGHER_BRANCHES" ]]; then
            # Extract the highest version
            HIGHEST_VERSION=$(echo "$HIGHER_BRANCHES" | tail -n 1)
            if [[ "$CURRENT_VERSION" == "$HIGHEST_VERSION" ]]; then
              echo "run_release_please=true" >> $GITHUB_OUTPUT
            else
              echo "run_release_please=false" >> $GITHUB_OUTPUT
              echo "Release-please skipped for branch: $RELEASE_BRANCH. Higher versioned release branches exist."
            fi
          else
            echo "run_release_please=true" >> $GITHUB_OUTPUT  # if no higher version branch exists run release-please.
          fi

      - name: Get merged PR number from commit
        id: get_pr
        run: |
          commit_sha="${{ github.sha }}"
          pr_number=$(gh pr list --search "${commit_sha}" --state merged --json number | jq '.[0].number // empty')
          echo "pr_number_output=${pr_number:-}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ steps.gh-app-token.outputs.token }}


      - name: Check for label and unlock conversation
        if: steps.get_pr.outputs.pr_number_output != ''
        run: |
          PR_NUMBER=${{ steps.get_pr.outputs.pr_number_output }}
          echo "Found merged PR number: $PR_NUMBER"

          # Fetch PR details and extract labels
          PR_LABELS=$(gh api --jq '.labels.[].name' /repos/OpenZeppelin/openzeppelin-monitor/pulls/$PR_NUMBER)

          echo "PR labels: $PR_LABELS"

          if echo "$PR_LABELS" | grep -q "autorelease: pending"; then
            echo "Label 'autorelease: pending' found. Unlocking conversation..."
            gh issue unlock $PR_NUMBER
          else
            echo "Label 'autorelease: pending' not found. Skipping unlock."
          fi
        env:
          GH_TOKEN: ${{ steps.gh-app-token.outputs.token }}

      - name: Start release please action
        id: release
        uses: googleapis/release-please-action@a02a34c4d625f9be7cb89156071d8567266a2445  # v4.2.0
        if: ${{ steps.check_branch.outputs.run_release_please == 'true' }}
        with:
          token: ${{ steps.gh-app-token.outputs.token }}
          target-branch: ${{ github.ref_name }}
          config-file: .release-config.json
          manifest-file: .release-manifest.json

  update-cargo-lockfile:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.pr_created == 'true' }}
    steps:
      - name: Get github app token
        uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09  # v1.11.7
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Checkout release branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 2
          token: ${{ steps.gh-app-token.outputs.token }}
          ref: ${{ needs.release-please.outputs.release_head_branch }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.gh-app-token.outputs.app-slug
          }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.gh-app-token.outputs.token }}

      - name: Prepare
        id: init
        uses: ./.github/actions/prepare

      - name: Cargo Update
        id: lock-file-commit
        run: |-
          cargo update
          git add Cargo.lock
          if ! git diff --cached --quiet Cargo.lock; then
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "Cargo.lock has no changes, skipping commit and push."
          fi

      - name: Commit cargo update
        if: ${{ steps.lock-file-commit.outputs.changes == 'true' }}
        uses: iarekylew00t/verified-bot-commit@849c406ce58dfd17ed6a8b981448968d4d0f2012  # v1.3.2
        with:
          message: 'chore: Updating lock file'
          token: ${{ steps.gh-app-token.outputs.token }}
          ref: ${{ needs.release-please.outputs.release_head_branch }}
          files: |-
            Cargo.lock

  release-sbom:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Get github app token
        uses: actions/create-github-app-token@af35edadc00be37caa72ed9f3e6d5f7801bfdf09  # v1.11.7
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}

      - name: Run SBOM
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0  # v0.18.0
        with:
          upload-artifact-retention: 7
          upload-release-assets: false
          github-token: ${{ steps.gh-app-token.outputs.token }}
          output-file: openzeppelin-monitor-${{ needs.release-please.outputs.version
            }}-spdx.json
          artifact-name: openzeppelin-monitor-${{ needs.release-please.outputs.version
            }}-spdx.json

      - name: Upload Release Artifact
        env:
          GH_TOKEN: ${{ steps.gh-app-token.outputs.token }}
        run: gh release upload ${{ needs.release-please.outputs.tag }} ./openzeppelin-monitor-${{needs.release-please.outputs.version
          }}-spdx.json
